// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go-v2/service/ssm (interfaces: GetParametersByPathAPIClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ssm "github.com/aws/aws-sdk-go-v2/service/ssm"
	gomock "github.com/golang/mock/gomock"
)

// MockGetParametersByPathAPIClient is a mock of GetParametersByPathAPIClient interface.
type MockGetParametersByPathAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockGetParametersByPathAPIClientMockRecorder
}

// MockGetParametersByPathAPIClientMockRecorder is the mock recorder for MockGetParametersByPathAPIClient.
type MockGetParametersByPathAPIClientMockRecorder struct {
	mock *MockGetParametersByPathAPIClient
}

// NewMockGetParametersByPathAPIClient creates a new mock instance.
func NewMockGetParametersByPathAPIClient(ctrl *gomock.Controller) *MockGetParametersByPathAPIClient {
	mock := &MockGetParametersByPathAPIClient{ctrl: ctrl}
	mock.recorder = &MockGetParametersByPathAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetParametersByPathAPIClient) EXPECT() *MockGetParametersByPathAPIClientMockRecorder {
	return m.recorder
}

// GetParametersByPath mocks base method.
func (m *MockGetParametersByPathAPIClient) GetParametersByPath(arg0 context.Context, arg1 *ssm.GetParametersByPathInput, arg2 ...func(*ssm.Options)) (*ssm.GetParametersByPathOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetParametersByPath", varargs...)
	ret0, _ := ret[0].(*ssm.GetParametersByPathOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParametersByPath indicates an expected call of GetParametersByPath.
func (mr *MockGetParametersByPathAPIClientMockRecorder) GetParametersByPath(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParametersByPath", reflect.TypeOf((*MockGetParametersByPathAPIClient)(nil).GetParametersByPath), varargs...)
}
